--Task 4: Aggregate Functions and Grouping

--1.Apply aggregate functions on numeric columns
--2.Use GROUP BY to categorize
--3.Filter groups using HAVING


--1.Apply aggregate functions on numeric columns
--The aggregate functions are count,sum,average,min,max
--COUNT
SELECT COUNT(LAST_NAME) AS NO_OF_STUDENTS
FROM STUDENTS;

SELECT COUNT(DEPARTMENT) AS DEPT
FROM TEACHERS;

SELECT COUNT(COURSE_NAME) AS COURSE_TAKEN
FROM COURSE;

SELECT COUNT(ENROLLEMENT_ID) AS ENROLLED_STUDENTS
FROM ENROLLEMENTS;

SELECT COUNT(GRADE) AS STUDENT_GRADE
FROM GRADES;
--SUM
SELECT SUM(AGE) FROM STUDENTS;

SELECT SUM(Performence) FROM TEACHERS;

SELECT SUM(Credits) FROM COURSE;

SELECT SUM(Enrollement_id) FROM ENROLLEMENTS;

SELECT SUM(Grade_id) FROM GRADES;

--AVERAGE
SELECT AVG(AGE) AS AVG_AGE
FROM STUDENTS;

SELECT AVG(Performence) AS AVG_Performence
FROM TEACHERS;

SELECT AVG(Credits) AS AVG_CREDITS
FROM COURSE;

SELECT AVG(Enrollement_id) FROM ENROLLEMENTS;

SELECT AVG(Grade_id) FROM GRADES;

--MIN
SELECT MIN(AGE) AS MIN_AGE
FROM STUDENTS;

SELECT MIN(Performence) AS MIN_PERFORMENCE
FROM TEACHERS;


SELECT MIN(Credits) AS MIN_CREDITS
FROM COURSE;

SELECT MIN(Enrollement_id) FROM ENROLLEMENTS;

SELECT MIN(Grade_id) FROM GRADES;

--MAX
SELECT MAX(AGE) AS MAX_AGE
FROM STUDENTS;

SELECT MAX(PERFORMENCE) AS MAX_PERFORMENCE
FROM TEACHERS;

SELECT MAX(CREDITS) AS MAX_CREDITS
FROM COURSE;


SELECT MAX(Enrollement_id) FROM ENROLLEMENTS;

SELECT MAX(Grade_id) FROM GRADES;


--2.Use GROUP BY to categorize
SELECT FIRST_NAME,SUM(AGE)
FROM STUDENTS
GROUP BY FIRST_NAME;

SELECT DEPARTMENT,SUM(PERFORMENCE)
FROM TEACHERS
GROUP BY DEPARTMENT;

SELECT COURSE_NAME,SUM(CREDITS)
FROM COURSE
GROUP BY COURSE_NAME;

SELECT GRADE,COUNT(GRADE_ID)
FROM GRADES
GROUP BY GRADE;

SELECT ENROLLEMENT_ID,COUNT(STUDENT_ID)
FROM ENROLLEMENTS
GROUP BY ENROLLEMENT_ID;


--3.Filter groups using HAVING
SELECT FIRST_NAME,SUM(AGE)
FROM STUDENTS
GROUP BY FIRST_NAME
HAVING SUM(AGE)>22;

SELECT Department,SUM(Performence)
FROM TEACHERS
GROUP BY Department
HAVING SUM(PERFORMENCE)>5;

SELECT COURSE_NAME,SUM(CREDITS)
FROM COURSE 
GROUP BY COURSE_NAME
HAVING SUM(CREDITS)>=3;

SELECT GRADE,COUNT(GRADE_ID)
FROM GRADES
GROUP BY GRADE
HAVING COUNT(GRADE_ID)>2;
